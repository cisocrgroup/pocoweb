#!/bin/bash
# integration-tests

v=-v
fail="\033[0;31mFAIL\033[0m"
success="\033[0;32mSUCCESS\033[0m"
cookies=$(mktemp)
config=$1
name=$(git config -f $config --get plugin-simple-login.default-user)
pass=$(git config -f $config --get plugin-simple-login.default-pass)
host=$(git config -f $config --get daemon.host)
port=$(git config -f $config --get daemon.port)
errors=0
spid=0

finish() {
	# echo removing $cookies
	rm $cookies
	# echo killing $spid
	kill $spid > /dev/null 2>&1
}

start_server() {
	# echo "config: $config"
	# echo "starting server"
	./pcwd $config 2> /dev/null &
	spid=$!
	# echo "started server ($spid)"
	sleep 1
}

expect() {
	url=$1
	want=$2
	got=$3
	if [ $want -ne $got ]; then
		((error++))
		printf "%-50s" "$url"
		echo -ne $fail
		echo " [want=$want; got=$got]"
	else
		printf "%-50s" "$url"
		echo -e $success
	fi
}

## run_curl() {
## 	curl --fail $v -c $cookies -g -6 http://[$host]:$port$1
## 	return $?
## }

get_curl_status_code() {
	curl --silent -v -w '%{http_code}' -b $cookies -c $cookies -g -6 http://[$host]:$port$1 |\
		sed -e 's/\([0-9][0-9][0-9]\).*/\1/g'
}


#
# API TEST FUNCTIONS
#
login() {
	name=$1
	pass=$2
	want=$3
	url="/login/user/$name/pass/$pass"
	code=$(get_curl_status_code $url)
	expect $url $want $code
}

loggedin() {
	name=$1
	want=$2
	url="/login/user/$name"
	code=$(get_curl_status_code $url)
	expect $url $want $code
}

#
# START OF SCRIPT
#

if [ $# -ne 1 ]; then
	echo "usage: $0 config"
	exit 255
fi

trap finish EXIT
start_server
login $name $pass 200
loggedin $name 200
exit $error
